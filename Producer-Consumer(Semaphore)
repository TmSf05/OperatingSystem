#include <iostream>
#include <thread>
#include <semaphore.h>

using namespace std;

const int BUFFER_SIZE = 8;

int buffer[BUFFER_SIZE];
int front = 0, rear = 0;
sem_t mutex, full, empty;

void produce(int value) {
    sem_wait(&empty);
    sem_wait(&mutex);
    buffer[rear] = value;
    rear = (rear + 1) % BUFFER_SIZE;
    cout << "Produced value: " << value << endl;
    cout<< "BUFFER:\n";
    for(int i=0; i<BUFFER_SIZE; i++){
            cout << "| "<< buffer[i];
    //         if (buffer[i] == 8){
    //             cout<<"\nBuffer is fully\n";
    // }
    }
    cout<<" |";
    sem_post(&mutex);
    sem_post(&full);
}

void consume() {
    sem_wait(&full);
    sem_wait(&mutex);
    int value = buffer[front];
    front = (front + 1) % BUFFER_SIZE;
    cout << "Consumed value: " << value << endl;
    cout<< "BUFFER:\n";
    for(int i=0; i<BUFFER_SIZE; i++){
            cout <<"| "<< buffer[i];
    //          if (buffer[i] == 8){
    //             cout<<"\nBuffer is fully\n";
    // }
    }
    cout<<" |";
    sem_post(&mutex);
    sem_post(&empty);
}

int main() {
    sem_init(&mutex, 0, 1);
    sem_init(&full, 0, 0);
    sem_init(&empty, 0 , BUFFER_SIZE);

    int choice = 0;
    do {
        cout << "\n1. Produce 2. Consume 3. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        switch (choice) {
            case 1:
                int value;
                cout << "Enter the value: ";
                cin >> value;
                produce(value);
                break;
            case 2:
                if (front == rear) {
                    cout << "Buffer is Empty\n";
                } else {
                    consume();
                }
                break;
            case 3:
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice\n";
                break;
        }
    } while (choice != 3);

    sem_destroy(&mutex);
    sem_destroy(&full);
    sem_destroy(&empty);

    return 0;
}
